{"ast":null,"code":"import produce from 'immer';\nexport const preset1 = setGrid => {\n  setGrid(grid => {\n    return produce(grid, gridCopy => {\n      gridCopy[3][5]['alive'] = true;\n      gridCopy[3][6]['alive'] = true;\n      gridCopy[3][7]['alive'] = true;\n    });\n  });\n};\nexport const preset2 = setGrid => {\n  setGrid(grid => {\n    return produce(grid, gridCopy => {\n      gridCopy[3][5]['alive'] = true;\n      gridCopy[3][6]['alive'] = true;\n      gridCopy[4][6]['alive'] = true;\n      gridCopy[4][5]['alive'] = true;\n      gridCopy[2][7]['alive'] = true;\n      gridCopy[3][8]['alive'] = true;\n      gridCopy[3][9]['alive'] = true;\n      gridCopy[4][8]['alive'] = true;\n      gridCopy[4][9]['alive'] = true;\n      gridCopy[5][8]['alive'] = true;\n      gridCopy[5][9]['alive'] = true;\n      gridCopy[5][6]['alive'] = true;\n      gridCopy[6][5]['alive'] = true;\n      gridCopy[6][6]['alive'] = true;\n      gridCopy[7][5]['alive'] = true;\n      gridCopy[7][6]['alive'] = true;\n      gridCopy[7][4]['alive'] = true;\n      gridCopy[8][6]['alive'] = true;\n      gridCopy[9][6]['alive'] = true;\n      gridCopy[9][7]['alive'] = true;\n      gridCopy[10][7]['alive'] = true;\n      gridCopy[10][8]['alive'] = true;\n      gridCopy[10][9]['alive'] = true;\n      gridCopy[9][9]['alive'] = true;\n      gridCopy[9][10]['alive'] = true;\n      gridCopy[8][8]['alive'] = true;\n    });\n  });\n};\nexport const preset3 = grid => {};","map":{"version":3,"sources":["/Users/leanan/Desktop/coding/game-of-life/client/src/components/helper.js"],"names":["produce","preset1","setGrid","grid","gridCopy","preset2","preset3"],"mappings":"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","sourcesContent":["import produce from 'immer';\n\nexport const preset1 = (setGrid) => {\n\n    setGrid(grid => {\n\n      return produce(grid, gridCopy => {\n\n        gridCopy[3][5]['alive'] = true\n        gridCopy[3][6]['alive'] = true\n        gridCopy[3][7]['alive'] = true\n      })\n    })\n\n}\n\nexport const preset2 = (setGrid) => {\n\n  setGrid(grid => {\n\n    return produce(grid, gridCopy => {\n\n      gridCopy[3][5]['alive'] = true\n      gridCopy[3][6]['alive'] = true\n      gridCopy[4][6]['alive'] = true\n      gridCopy[4][5]['alive'] = true\n    \n      gridCopy[2][7]['alive'] = true\n      gridCopy[3][8]['alive'] = true\n      gridCopy[3][9]['alive'] = true\n    \n      gridCopy[4][8]['alive'] = true\n      gridCopy[4][9]['alive'] = true\n      gridCopy[5][8]['alive'] = true\n      gridCopy[5][9]['alive'] = true\n    \n      gridCopy[5][6]['alive'] = true\n      gridCopy[6][5]['alive'] = true\n      gridCopy[6][6]['alive'] = true\n    \n      gridCopy[7][5]['alive'] = true\n      gridCopy[7][6]['alive'] = true\n      gridCopy[7][4]['alive'] = true\n    \n      gridCopy[8][6]['alive'] = true\n      gridCopy[9][6]['alive'] = true\n      gridCopy[9][7]['alive'] = true\n      gridCopy[10][7]['alive'] = true\n      gridCopy[10][8]['alive'] = true\n      gridCopy[10][9]['alive'] = true\n      gridCopy[9][9]['alive'] = true\n    \n      gridCopy[9][10]['alive'] = true\n      gridCopy[8][8]['alive'] = true\n\n    })\n  })\n\n}\n\nexport const preset3 = (grid) => {\n\n}"]},"metadata":{},"sourceType":"module"}